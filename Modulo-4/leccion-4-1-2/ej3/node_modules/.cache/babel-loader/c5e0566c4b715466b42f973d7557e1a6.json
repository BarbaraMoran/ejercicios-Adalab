{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/B\\xE1rbara/Desktop/Adalab/ejercicios-Adalab/Modulo-3/modulo-3-leccion-07-ejercicio-3/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../stylesheets/App.css\";\nimport Form from \"./Form\";\nimport Preview from \"./Preview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [genres, setGender] = useState([]);\n\n  const handleInput = value => {\n    setName(value);\n  }; //Select\n\n\n  const handleFormChange = value => {\n    setLanguage(value);\n  }; //Checkbox\n\n\n  const handleCheckboxChange = value => {\n    //setGender(value);\n    // que cuando clicke para quitarlo no cuente como una seleccion mas\n    if (genres.includes(value)) {\n      const newGender = genres.filter(genre => genre !== value);\n      setGender(newGender);\n    } else if (genres.length < 3) {\n      const newGender = [...genres, value];\n      setGender(newGender);\n    } else {\n      alert(\"Solo puedes elegir tres generos\");\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    //Ejercicio para completar en clases \n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_s(App, \"B1OFmUBGNVd7maccg8+VMpR/oSY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/BÃ¡rbara/Desktop/Adalab/ejercicios-Adalab/Modulo-3/modulo-3-leccion-07-ejercicio-3/src/components/App.js"],"names":["React","useState","Form","Preview","App","name","setName","language","setLanguage","genres","setGender","handleInput","value","handleFormChange","handleCheckboxChange","includes","newGender","filter","genre","length","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,wBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMU,WAAW,GAAIC,KAAD,IAAS;AAC3BN,IAAAA,OAAO,CAACM,KAAD,CAAP;AACD,GAFD,CANgB,CAShB;;;AACA,QAAMC,gBAAgB,GAAID,KAAD,IAAS;AACjCJ,IAAAA,WAAW,CAACI,KAAD,CAAX;AACA,GAFD,CAVgB,CAahB;;;AACA,QAAME,oBAAoB,GAAIF,KAAD,IAAS;AACpC;AACA;AAEC,QAAGH,MAAM,CAACM,QAAP,CAAgBH,KAAhB,CAAH,EAA0B;AACxB,YAAMI,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAcC,KAAK,IAAGA,KAAK,KAAIN,KAA/B,CAAlB;AACAF,MAAAA,SAAS,CAACM,SAAD,CAAT;AACD,KAHD,MAGM,IAAGP,MAAM,CAACU,MAAP,GAAgB,CAAnB,EAAqB;AACzB,YAAMH,SAAS,GAAG,CAAC,GAAGP,MAAJ,EAAYG,KAAZ,CAAlB;AACAF,MAAAA,SAAS,CAACM,SAAD,CAAT;AACD,KAHK,MAGD;AACHI,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACD;AAEH,GAdD;;AAiBA;AAAA;AACE;AACA;AAAA,8BACA,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAFF;AAOD,CAtCD;;GAAMhB,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport \"../stylesheets/App.css\"\nimport Form from \"./Form\"; \nimport Preview from \"./Preview\"\n\nconst App = () => {\n\n  const [name, setName]= useState(\"\"); \n  const [language, setLanguage]= useState(\"\"); \n  const [genres, setGender]= useState([]); \n\n  const handleInput = (value)=>{\n    setName(value);\n  }\n  //Select\n  const handleFormChange = (value)=>{\n   setLanguage(value); \n  }\n  //Checkbox\n  const handleCheckboxChange = (value)=>{\n    //setGender(value);\n    // que cuando clicke para quitarlo no cuente como una seleccion mas\n\n     if(genres.includes(value)){\n       const newGender = genres.filter(genre=> genre !==value); \n       setGender(newGender); \n     }else if(genres.length < 3){\n       const newGender = [...genres, value]; \n       setGender(newGender);\n     }else{\n       alert(\"Solo puedes elegir tres generos\")\n     }\n\n  }\n\n\n  return (\n    //Ejercicio para completar en clases \n    <>\n    <Form> </Form>\n    <Preview></Preview>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}