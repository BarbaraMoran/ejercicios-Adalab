{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/B\\xE1rbara/Desktop/Adalab/ejercicios-Adalab/Modulo-3/modulo-3-leccion-010-ej5/src/components/Text.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Text = () => {\n  _s();\n\n  const [userText, setUserText] = useState(localStorage.getItem(\"newText\")); // usamos el hook useEffect para gestionar los ciclos de vida del componente\n\n  useEffect(() => {\n    const newText = localStorage.getItem(\"newText\");\n    setUserText(newText);\n    return () => {\n      localStorage.setItem(\"newText\", userText);\n    };\n  });\n\n  let handleTextArea = event => {\n    userText = event.target.value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"comments\",\n    name: \"comments\",\n    value: userText,\n    rows: \"8\",\n    cols: \"80\",\n    onChange: handleTextArea\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Text, \"t3YL1lsYvEyAnbNQZ+9WfT0xmvs=\");\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/mnt/c/Users/BÃ¡rbara/Desktop/Adalab/ejercicios-Adalab/Modulo-3/modulo-3-leccion-010-ej5/src/components/Text.js"],"names":["React","useState","useEffect","Text","userText","setUserText","localStorage","getItem","newText","setItem","handleTextArea","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAACK,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAxC,CADiB,CAEjB;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAGF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;AACAF,IAAAA,WAAW,CAACG,OAAD,CAAX;AAEA,WAAO,MAAM;AACXF,MAAAA,YAAY,CAACG,OAAb,CAAqB,SAArB,EAAgCL,QAAhC;AACD,KAFD;AAGD,GAPQ,CAAT;;AASA,MAAIM,cAAc,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,QAAQ,GAAGO,KAAK,CAACC,MAAN,CAAaC,KAAxB;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAET,QAHT;AAIE,IAAA,IAAI,EAAC,GAJP;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,QAAQ,EAAEM;AANZ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1BD;;GAAMP,I;;KAAAA,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Text = () => {\r\n  const [userText, setUserText] = useState(localStorage.getItem(\"newText\"));\r\n  // usamos el hook useEffect para gestionar los ciclos de vida del componente\r\n  useEffect(() => {\r\n    const newText = localStorage.getItem(\"newText\");\r\n    setUserText(newText);\r\n\r\n    return () => {\r\n      localStorage.setItem(\"newText\", userText);\r\n    };\r\n  });\r\n\r\n  let handleTextArea = (event) => {\r\n    userText = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <textarea\r\n      id=\"comments\"\r\n      name=\"comments\"\r\n      value={userText}\r\n      rows=\"8\"\r\n      cols=\"80\"\r\n      onChange={handleTextArea}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Text;\r\n"]},"metadata":{},"sourceType":"module"}