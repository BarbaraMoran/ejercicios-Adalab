{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/B\\xE1rbara/Desktop/Adalab/modulo-3-evaluacion-final-BarbaraMoran/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport getApiData from \"../services/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  const [searchedCharacter, setSearchedCharacter] = useState(\"\");\n  const [responseText, setResponseText] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    getApiData().then(charactersData => {\n      setCharacters(charactersData);\n    }); //renderCharacterStatus();\n  }, []);\n\n  const handleFilter = (name, inputValue) => {\n    setSearchedCharacter(inputValue);\n    console.log(searchedCharacter);\n    renderNotFound();\n  };\n\n  const filteredCharacters = characters.filter(character => {\n    return character.name.toLowerCase().includes(searchedCharacter.toLowerCase());\n  });\n\n  const renderNotFound = () => {\n    const checkSearchedCharacters = characters.find(character => {\n      return character.name.toLowerCase().includes(searchedCharacter.toLowerCase());\n    });\n\n    if (checkSearchedCharacters === undefined) {\n      setResponseText( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"response-text\",\n          children: [\"No hay ning\\xFAn personaje que coincida con la palabra \", \"\", searchedCharacter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true));\n    } else {\n      setResponseText(\"\");\n    }\n  };\n\n  const renderCharacterDetail = routerProps => {\n    const routeCharacterId = routerProps.match.params.id;\n    const foundCharacter = characters.find(character => character.id === parseInt(routeCharacterId));\n\n    if (foundCharacter) {\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        character: foundCharacter,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  /*const renderCharacterStatus = () => {\n    return characters.map((characterStatus) => {\n      return characterStatus.status.map((eachStatus) => {\n        if (eachStatus === \"Dead\") {\n          setStatus(<i class=\"fas fa-skull-crossbones\"></i>);\n        } else if (eachStatus === \"Alive\") {\n          setStatus(<i class=\"fas fa-heartbeat\"></i>);\n        }\n      });\n    });\n  };\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          characters: filteredCharacters,\n          searchedCharacter: searchedCharacter,\n          handleFilter: handleFilter,\n          responseText: responseText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/characterDetail/:id\",\n      render: renderCharacterDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wWrAEp37yLdAgLIU3NiTMvpHXjM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/Bárbara/Desktop/Adalab/modulo-3-evaluacion-final-BarbaraMoran/src/components/App.js"],"names":["useState","useEffect","Switch","Route","getApiData","Header","Main","CharacterDetail","NotFound","App","characters","setCharacters","searchedCharacter","setSearchedCharacter","responseText","setResponseText","status","setStatus","then","charactersData","handleFilter","name","inputValue","console","log","renderNotFound","filteredCharacters","filter","character","toLowerCase","includes","checkSearchedCharacters","find","undefined","renderCharacterDetail","routerProps","routeCharacterId","match","params","id","foundCharacter","parseInt"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport getApiData from \"../services/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport NotFound from \"./NotFound\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchedCharacter, setSearchedCharacter] = useState(\"\");\n  const [responseText, setResponseText] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    getApiData().then((charactersData) => {\n      setCharacters(charactersData);\n    });\n    //renderCharacterStatus();\n  }, []);\n\n  const handleFilter = (name, inputValue) => {\n    setSearchedCharacter(inputValue);\n    console.log(searchedCharacter);\n    renderNotFound();\n  };\n\n  const filteredCharacters = characters.filter((character) => {\n    return character.name\n      .toLowerCase()\n      .includes(searchedCharacter.toLowerCase());\n  });\n\n  const renderNotFound = () => {\n    const checkSearchedCharacters = characters.find((character) => {\n      return character.name\n        .toLowerCase()\n        .includes(searchedCharacter.toLowerCase());\n    });\n\n    if (checkSearchedCharacters === undefined) {\n      setResponseText(\n        <>\n          <p className=\"response-text\">\n            No hay ningún personaje que coincida con la palabra {\"\"}\n            {searchedCharacter}\n          </p>{\" \"}\n        </>\n      );\n    } else {\n      setResponseText(\"\");\n    }\n  };\n\n  const renderCharacterDetail = (routerProps) => {\n    const routeCharacterId = routerProps.match.params.id;\n    const foundCharacter = characters.find(\n      (character) => character.id === parseInt(routeCharacterId)\n    );\n\n    if (foundCharacter) {\n      return <CharacterDetail character={foundCharacter} status={status} />;\n    } else {\n      return <NotFound />;\n    }\n  };\n\n  /*const renderCharacterStatus = () => {\n    return characters.map((characterStatus) => {\n      return characterStatus.status.map((eachStatus) => {\n        if (eachStatus === \"Dead\") {\n          setStatus(<i class=\"fas fa-skull-crossbones\"></i>);\n        } else if (eachStatus === \"Alive\") {\n          setStatus(<i class=\"fas fa-heartbeat\"></i>);\n        }\n      });\n    });\n  };\n  }*/\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className=\"App\">\n          <Header />\n          <Main\n            characters={filteredCharacters}\n            searchedCharacter={searchedCharacter}\n            handleFilter={handleFilter}\n            responseText={responseText}\n          />\n        </div>\n      </Route>\n      <Route path=\"/characterDetail/:id\" render={renderCharacterDetail} />\n    </Switch>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}