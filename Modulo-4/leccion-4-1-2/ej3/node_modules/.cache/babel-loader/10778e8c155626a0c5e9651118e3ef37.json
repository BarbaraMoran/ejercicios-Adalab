{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/B\\xE1rbara/Desktop/Adalab/modulo-3-evaluacion-final-BarbaraMoran/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport getApiData from \"../services/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  const [searchedCharacter, setSearchedCharacter] = useState(\"\");\n  const [searchedSpecies, setSearchedSpecies] = useState(\"\");\n  useEffect(() => {\n    getApiData().then(charactersData => {\n      setCharacters(charactersData);\n    });\n  }, []);\n\n  const handleFilter = inputInfo => {\n    if (inputInfo.name === \"search\") {\n      setSearchedCharacter(inputInfo.value);\n    } else {\n      setSearchedSpecies(inputInfo.value);\n    }\n\n    console.log(searchedCharacter);\n  };\n\n  const filteredCharacters = characters.filter(character => {\n    return character.name.toLowerCase().includes(searchedCharacter.toLowerCase());\n  }).filter(character => {\n    return character.species.includes(searchedSpecies);\n  });\n\n  const renderCharacterDetail = routerProps => {\n    const routeCharacterId = routerProps.match.params.id;\n    const foundCharacter = characters.find(character => character.id === parseInt(routeCharacterId));\n\n    if (foundCharacter) {\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        character: foundCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          characters: filteredCharacters,\n          searchedCharacter: searchedCharacter,\n          searchedSpecies: searchedSpecies,\n          handleFilter: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/characterDetail/:id\",\n      render: renderCharacterDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gQ8YzMkK0ZNTMYvKq7GhHtFotzw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/BÃ¡rbara/Desktop/Adalab/modulo-3-evaluacion-final-BarbaraMoran/src/components/App.js"],"names":["useState","useEffect","Switch","Route","getApiData","Header","Main","CharacterDetail","NotFound","App","characters","setCharacters","searchedCharacter","setSearchedCharacter","searchedSpecies","setSearchedSpecies","then","charactersData","handleFilter","inputInfo","name","value","console","log","filteredCharacters","filter","character","toLowerCase","includes","species","renderCharacterDetail","routerProps","routeCharacterId","match","params","id","foundCharacter","find","parseInt"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport getApiData from \"../services/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport NotFound from \"./NotFound\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchedCharacter, setSearchedCharacter] = useState(\"\");\n  const [searchedSpecies, setSearchedSpecies] = useState(\"\");\n\n  useEffect(() => {\n    getApiData().then((charactersData) => {\n      setCharacters(charactersData);\n    });\n  }, []);\n\n  const handleFilter = (inputInfo) => {\n    if (inputInfo.name === \"search\") {\n      setSearchedCharacter(inputInfo.value);\n    } else {\n      setSearchedSpecies(inputInfo.value);\n    }\n\n    console.log(searchedCharacter);\n  };\n\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name\n        .toLowerCase()\n        .includes(searchedCharacter.toLowerCase());\n    })\n    .filter((character) => {\n      return character.species.includes(searchedSpecies);\n    });\n\n  const renderCharacterDetail = (routerProps) => {\n    const routeCharacterId = routerProps.match.params.id;\n    const foundCharacter = characters.find(\n      (character) => character.id === parseInt(routeCharacterId)\n    );\n\n    if (foundCharacter) {\n      return <CharacterDetail character={foundCharacter} />;\n    } else {\n      return <NotFound />;\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className=\"App\">\n          <Header />\n          <Main\n            characters={filteredCharacters}\n            searchedCharacter={searchedCharacter}\n            searchedSpecies={searchedSpecies}\n            handleFilter={handleFilter}\n          />\n        </div>\n      </Route>\n      <Route path=\"/characterDetail/:id\" render={renderCharacterDetail} />\n    </Switch>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}